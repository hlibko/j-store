openapi: 3.0.3
info:
  title: Product Service API
  description: API for managing products in J-Store
  version: 1.0.2
servers:
  - url: https://api.example.com/dev
    description: Development server
paths:
  /products:
    get:
      summary: Get all products
      description: Retrieves a list of all products with their stock information
      operationId: getProductsList
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductWithStock'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new product
      description: Creates a new product with optional stock information
      operationId: createProduct
      requestBody:
        description: Product object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithStock'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{productId}:
    get:
      summary: Get product by ID
      description: Retrieves a specific product by its ID along with stock information
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithStock'
        '400':
          description: Invalid product ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - title
        - price
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: float
          description: Price of the product
    ProductInput:
      type: object
      required:
        - title
        - price
      properties:
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: float
          description: Price of the product
        count:
          type: integer
          minimum: 0
          description: Available stock quantity of the product
    ProductWithStock:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            count:
              type: integer
              minimum: 0
              description: Available stock quantity of the product
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message